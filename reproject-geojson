#!/usr/bin/env node

var geojsonStream = require('geojson-stream')
var extent = require('turf-extent')
var through = require('through2')
var argv = require('minimist')(process.argv.slice(2))

process.stdin.pipe(geojsonStream.parse())
.pipe(through.obj(write))
.pipe(geojsonStream.stringify())
.pipe(process.stdout)

function write (feature, _, next) {
  reproject(feature.geometry.coordinates)
  feature.bbox = extent(feature)
  this.push(feature)
  next()
}

var d3 = require('d3-geo')
var R = 6378137.0
var proj
if (!argv.projection || argv.projection === 'albers') {
  // Scale the Albers projection output so that it matches up with the
  // coordinate system of web mercator.
  proj = d3.geoAlbersUsa().scale(2 * Math.PI * R)
} else if (argv.projection === 'mercator') {
  proj = d3.geoMercator().translate([0, 0]).scale(R)
} else {
  throw new Error('Unsupported projection ' + argv.projection)
}

function reproject (coordinates) {
  if (Array.isArray(coordinates[0])) { return coordinates.forEach(reproject) }
  if (argv.reverse) {
    reverse(coordinates)
    return
  }

  forward(coordinates)
}

function forward (coordinates) {
  var projected = proj(coordinates)
  if (!projected) { return }
  coordinates[0] = projected[0]
  coordinates[1] = -projected[1]
}

function reverse (projected) {
  projected[1] = -projected[1]
  var reversed = proj.invert(projected)
  if (!reversed) { return }
  projected[0] = reversed[0]
  projected[1] = reversed[1]
}

